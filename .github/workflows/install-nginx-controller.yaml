name: deploy ingress nginx controller to aks cluster
on:
  workflow_dispatch:
    inputs:
      aks_resource_group_name:
        type: string
        description: The name of the resource group where the AKS cluster is located
        default: "DEVWITHKRISHNA-AKS-RG"
        required: true
      aks_cluster_name:
        type: string
        description: The name of the AKS cluster
        default: "DEVWITHKRISHNA-NONPROD"
        required: true

jobs:
  deploy-ingress-nginx-controller:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: azure login
      id: azure-login
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3 # default is latest (stable)

    - name: Setup helm
      id: install-helm
      uses: azure/setup-helm@v4.2.0 # default is latest (stable)

    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ inputs.aks_resource_group_name }}'
        cluster-name: '${{ inputs.aks_cluster_name }}'

    - uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.24'

    - name: Deploy to AKS
      id: deploy-ingress
      run: |
        echo "Getting credentials from ${{ inputs.aks_cluster_name }} AKS cluster "
        az aks get-credentials --resource-group ${{ inputs.aks_resource_group_name }} --name ${{ inputs.aks_cluster_name }}
        kubelogin convert-kubeconfig -l azurecli

        echo "Current Cluster Name is: $(kubectl config current-context)"

        echo "Installing ingress nginx controller using helm..."

        helm upgrade --install ingress-nginx ingress-nginx \
        --repo https://kubernetes.github.io/ingress-nginx \
        --namespace ingress-nginx --create-namespace

        sleep 10

        echo "Checking ingress pods status"

        kubectl wait --namespace ingress-nginx \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/component=controller \
        --timeout=120s
